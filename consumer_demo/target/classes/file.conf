transport {
   # tcp udt unix-domain-socket
   type = "TCP"
   #NIO NATIVE
   server = "NIO"
   #enable heartbeat
   heartbeat = true
   # the client batch send request enable
   enable-client-batch-send-request = true
   #thread factory for netty
   thread-factory {
     boss-thread-prefix = "NettyBoss"
     worker-thread-prefix = "NettyServerNIOWorker"
     server-executor-thread-prefix = "NettyServerBizHandler"
     share-boss-worker = false
     client-selector-thread-prefix = "NettyClientSelector"
     client-selector-thread-size = 1
     client-worker-thread-prefix = "NettyClientWorkerThread"
     # netty boss thread size,will not be used for UDT
     boss-thread-size = 1
     #auto default pin or 8
     worker-thread-size = 8
   }
   shutdown {
     # when destroy server, wait seconds
     wait = 3
   }
   serialization = "seata"
   compressor = "none"
 }
 service {
   #transaction service group mapping
   # 指定TC服务，ORDER-seata-service-group为订单微服务Application-name和seata-service-group拼接而成，假如是STOCK微服务，就为：STOCK-seata-service-group
   vgroupMapping.pro_tx_group = "default"
   #only support when registry.type=file, please don't set multiple addresses
   # 这个参数集群环境不需要配置
   default.grouplist = "www.eagle.com:8091"
   #degrade, current not support
   enableDegrade = false
   #disable seata
   disableGlobalTransaction = false
 }

 client {
   rm {
     async.commit.buffer.limit = 10000
     lock {
       retry.internal = 10
       retry.times = 30
       retry.policy.branch-rollback-on-conflict = true
     }
     report.retry.count = 5
     table.meta.check.enable = false
     report.success.enable = true
   }
   tm {
     commit.retry.count = 5
     rollback.retry.count = 5
   }
   undo {
     data.validation = true
     log.serialization = "jackson"
     #指定回滚日志表名称
     log.table = "undo_log"
   }
   log {
     exceptionRate = 100
   }
   support {
     # auto proxy the DataSource bean
     spring.datasource.autoproxy = false
   }
 }